upstream rails {
    server app:3000;
}

proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

server {
    listen       80;
    root         /rails/public;

    if_modified_since before;
    proxy_cache_revalidate on;
    proxy_cache_bypass $http_pragma;
    add_header X-Cache-Status $upstream_cache_status;

    location /assets/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
        try_files $uri @rails;
    }

    try_files $uri/index.html $uri @rails;

    location @rails {
        proxy_pass http://rails;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_cache my_cache;
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_403 http_404 http_429;
        proxy_cache_background_update on;
        proxy_set_header If-Modified-Since $http_if_modified_since;
        proxy_set_header If-None-Match $http_if_none_match;
    }

    error_page   500 502 503 504  /500.html;

    # location / {
        # root   /usr/share/nginx/html;
        # index  index.html index.htm;
    # }

    # redirect server error pages to the static page /50x.html
    # location = /50x.html {
    #     root   /usr/share/nginx/html;
    # }
    
    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    #error_page  404              /404.html;

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
